apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "filterapartments-chart.fullname" . }}
  labels:
    {{- include "filterapartments-chart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "filterapartments-chart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "filterapartments-chart.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      imagePullSecrets:
        - name: ecr-registry-secret
        {{- with .Values.imagePullSecrets }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      serviceAccountName: {{ include "filterapartments-chart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: copy-bot-session
          image: busybox
          command:
            - sh
            - -c
            - |
              if [ ! -f /session/bot.session ]; then
                echo "Copying initial bot session files..."
                cp /session-secret/bot.session /session/bot.session
                # cp /session-secret/bot.session-journal /session/bot.session-journal
              else
                echo "Bot session files already exist, skipping copy..."
              fi
          volumeMounts:
            - name: bot-session
              mountPath: /session
            - name: bot-session-secret
              mountPath: /session-secret
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: filter-apartments
                  key: database_url
            - name: TELEGRAM_API_ID
              valueFrom:
                secretKeyRef:
                  name: filter-apartments
                  key: telegram_api_id
            - name: TELEGRAM_API_HASH
              valueFrom:
                secretKeyRef:
                  name: filter-apartments
                  key: telegram_api_hash
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: bot-session-secret
          secret:
            secretName: bot-session-file
        - name: bot-session
          persistentVolumeClaim:
            claimName: {{ include "filterapartments-chart.fullname" . }}-session
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
